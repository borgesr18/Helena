// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Prescription model matching user requirements
model Prescricao {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String   @db.Uuid
  clinica_id   String?  @db.Uuid
  paciente     String
  medicamento  String
  posologia    String
  observacoes  String   @default("")
  criado_em    DateTime @default(now()) @map("criado_em")
  
  // Relations
  clinica      Clinica? @relation(fields: [clinica_id], references: [id])

  @@map("prescricoes")
}

// User profile model
model PerfilUsuario {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String   @unique @db.Uuid
  nome          String
  crm           String
  especialidade String?
  tipo          String   @default("m√©dico")
  plano         String?
  ativo_licenca Boolean  @default(true)
  empresa_id    String?  @db.Uuid
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@map("perfis_usuarios")
}

// Patient model
model Paciente {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id             String    @db.Uuid
  clinica_id          String?   @db.Uuid  // Add clinic association
  nome                String
  cpf                 String?
  data_nascimento     DateTime?
  genero              String?
  alergias            String?   // Add allergies field
  medicamentos_atuais String?   // Add current medications
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  
  // Relations
  clinica             Clinica?  @relation(fields: [clinica_id], references: [id])
  
  @@map("pacientes")
}

// Prescription template model
model ModeloPrescricao {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String   @db.Uuid
  nome              String
  categoria         String?
  especialidade     String?
  medicamento       String
  posologia         String
  observacoes       String   @default("")
  ativo             Boolean  @default(true)
  uso_count         Int      @default(0)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@map("modelos_prescricao")
}

// User settings model
model ConfiguracaoUsuario {
  id                    String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id               String  @unique @db.Uuid
  tema                  String  @default("claro")
  modelo_ia             String  @default("gpt-3.5-turbo")
  notificacoes_email    Boolean @default(true)
  notificacoes_push     Boolean @default(true)
  backup_automatico     Boolean @default(true)
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt

  @@map("configuracoes_usuario")
}

// Multi-tenant models for Phase 3
model Clinica {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nome          String
  cnpj          String?  @unique
  endereco      String?
  telefone      String?
  email         String?
  plano         String   @default("gratuito") // gratuito, basico, premium
  ativo         Boolean  @default(true)
  max_usuarios  Int      @default(5)
  max_pacientes Int      @default(100)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  
  // Relations
  usuarios      UsuarioClinica[]
  pacientes     Paciente[]
  prescricoes   Prescricao[]
  
  @@map("clinicas")
}

model UsuarioClinica {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  clinica_id String   @db.Uuid
  role       String   @default("medico") // admin, medico, secretaria
  ativo      Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  
  // Relations
  clinica    Clinica  @relation(fields: [clinica_id], references: [id], onDelete: Cascade)
  
  @@unique([user_id, clinica_id])
  @@map("usuarios_clinica")
}

// Drug interaction cache
model InteracaoMedicamento {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  medicamento1      String
  medicamento2      String
  severidade        String   // leve, moderada, grave
  descricao         String
  fonte             String   @default("rxnorm")
  created_at        DateTime @default(now())
  
  @@unique([medicamento1, medicamento2])
  @@map("interacoes_medicamentos")
}
